// @ts-nocheck
import type { NextPage } from 'next';
import React from 'react';
import ReactPlayer from 'react-player';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import Header from '../components/Header';
import axios from 'axios';
import Image from 'next/image';
import { useEffect, useState } from 'react';
import { Button } from '@mui/material';
import { DateTime } from 'luxon';
import styled from 'styled-components';

const Home: NextPage = () => {
  const [data, setData] = useState<any>();
  const getInitData = async () => {
    const res = await axios.get(
      'https://api.nasa.gov/planetary/apod?api_key=dnnDtxf50g4Q3eTOaedSyJKopIwXT0v7akqYh9Y3'
    );
    const newDate: any = DateTime.fromISO(res.data.date).toLocaleString(
      DateTime.DATE_FULL
    );
    setData({ ...res.data, date: newDate });

    console.log(newDate);
    console.log(data);
  };
  useEffect(() => {
    getInitData();
  }, []);
  var playerProps: any = { playing: true };
  useEffect(() => {
    console.log(data);
  }, [data]);
  const getRandomData = async () => {
    const res = await axios.get(
      'https://api.nasa.gov/planetary/apod?count=1&api_key=dnnDtxf50g4Q3eTOaedSyJKopIwXT0v7akqYh9Y3'
    );
    const newDate: any = DateTime.fromISO(res.data[0].date).toLocaleString(
      DateTime.DATE_FULL
    );
    setData({ ...res.data[0], date: newDate });
    console.log(newDate);
    console.log(data);
  };
  const Player = ({ className }) => (
    // console.log(props)
    <ReactPlayer
      url={data.url}
      className={className}
      playing
      width="100%"
      height="100%"
      controls={true}
      muted
    />
  );

  const AbsolutelyPositionedPlayer = styled(Player)`
    position: absolute;
    top: 0;
    left: 0;
  `;

  const RelativePositionWrapper = styled.div`
    position: relative;
    padding-top: 56.25%;
  `;

  const ResponsiveStyledPlayer = () => (
    <RelativePositionWrapper>
      <AbsolutelyPositionedPlayer />
    </RelativePositionWrapper>
  );

  const onCalChange = async () => {
    const chosenDate = document.getElementById('cal').value;
    const res = await axios.get(
      `https://api.nasa.gov/planetary/apod?date=${chosenDate}&api_key=dnnDtxf50g4Q3eTOaedSyJKopIwXT0v7akqYh9Y3`
    );
    const newDate: any = DateTime.fromISO(res.data.date).toLocaleString(
      DateTime.DATE_FULL
    );
    setData({ ...res.data, date: newDate });
  };
  return data ? (
    <div className={styles.container}>
      <Head>
        <title>Cleveland Stargazers</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />
      <main id="main-container" className="">
        <p className=" text-center max-w-xl">
          Welcome to the{' '}
          <span className="font-bold underline">
            Cleveland Stargazer Society
          </span>
          , where we revel in the raw awesomeness and craziness that is our
          universe !
          <br />
          <br />
          Every day NASA provides a new and interesting picture or video of our
          wonderful galaxy along with details about it from an expert.
          <br />
          <br />
          Try getting a random image or entering your birthday !
        </p>
        <section className="flex justify-center" id="btnContainer">
          <Button variant="outlined" onClick={() => getRandomData()}>
            Get a Random Image
          </Button>
          <div className="f">
            <label htmlFor="cal">choose the date</label>
            <input
              id="cal"
              name="cal"
              type="date"
              onChange={e => onCalChange(e)}
            />
          </div>
        </section>
        <section className="lg:p-8 md:p-8 p-4" id="displayData">
          <h1 className="text-2xl font-bold m-3 text-center">{data.title}</h1>

          <div className={styles.imgContainer}>
            {data.media_type === 'image' ? (
              <Image
                priority
                width={1080}
                height={810}
                src={data.hdurl}
                alt={data.title}
              />
            ) : (
              <ResponsiveStyledPlayer />
            )}
            {data.copyright && <p>Â© {data.copyright}</p>}
          </div>
          <p>{data.date}</p>
          <h2 className=" ">{data.explanation}</h2>
        </section>
      </main>
    </div>
  ) : (
    <div className={styles.container}>
      <Header />
      <h1>loading...</h1>
    </div>
  );
};

export default Home;
